AbstractSyntaxTree {
  FunctionDef[TypeStmt[uint32] main(VariableDefStmt[TypeStmt[uint32] argc])] {
    VariableDefAssignStmt[TypeStmt[uint32] x = FunctionCallExpr[factorial(VariableExpr[argc])]]
    VariableDefStmt[TypeStmt[uint32] y]
    MethodCallExpr[VariableExpr[y].=(VariableExpr[x])]
    MethodCallExpr[VariableExpr[y].++()]
    ReturnStmt[VariableExpr[y]]
  }

  FunctionDef[TypeStmt[uint32] factorial(VariableDefStmt[TypeStmt[uint32] var])] {
    IfStmt[MethodCallExpr[VariableExpr[var].==(ConstIntExpr[0])]] {
      ReturnStmt[ConstIntExpr[1]]
    }
    ReturnStmt[MethodCallExpr[VariableExpr[var].*(FunctionCallExpr[factorial(MethodCallExpr[VariableExpr[var].-(ConstIntExpr[1])])])]]
  }
}
